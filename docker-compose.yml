services:
  app:
    build:
      context: .

    env_file:
      - .env

    ports:
      - "8000:8000"

    volumes:
      - ./:/app

    command: >
      sh -c "poetry run python manage.py wait_for_db &&
            poetry run python manage.py migrate &&
            poetry run python manage.py runserver 0.0.0.0:8000"

    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres:16-alpine3.17

    restart: always

    env_file:
      - .env

    ports:
      - "5432:5432"

    volumes:
      - my_db:/var/lib/postgresql/data

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  my_db:
